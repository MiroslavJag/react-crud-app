{"version":3,"sources":["components/Layouts/Header/index.js","components/Layouts/Footer/index.js","components/Layouts/Layout/index.js","components/Pages/AdminPage/index.js","components/Pages/HomePage/index.js","components/Pages/ItemPage/index.js","App.js","serviceWorker.js","store/reducers/reducer.js","store/actions/actionTypes.js","store/sagas/initialData.js","index.js"],"names":["Header","Footer","Layout","props","children","ItemImage","styled","div","image","AdminPage","img","itemsList","this","initData","map","item","console","log","key","id","title","Component","connect","state","items","HomePage","ItemPage","App","className","path","component","Boolean","window","location","hostname","match","initialState","vendor","price","availability","ageClassification","material","type","shortDescriprion","description","error","reducer","action","initialData","initDataSaga","sagaMiddleware","createSagaMiddleware","store","createStore","applyMiddleware","run","app","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.175980d7.chunk.js","sourcesContent":["import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Header = () => {\n  return (\n    <>\n      <h1>This is Header</h1>\n    </>\n  );\n};\n\nexport default Header\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Footer = () => {\n  return (\n    <>\n      <h1>This is Footer</h1>\n    </>\n  );\n};\n\nexport default Footer\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport Header from \"../Header\";\nimport Footer from \"../Footer\";\n\nconst Layout = props => {\n  return (\n    <>\n      <Header />\n      {props.children}\n      <Footer />\n    </>\n  );\n};\n\nexport default Layout\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport styled from \"styled-components\";\n\nconst ItemImage = styled.div`\n  height: 580px;\n  width: 580px;\n  border: 1px solid lightgrey;\n  /* backgournd: ${props => `url(/assets/images/${props.image})`}; */\n  /* background: url('../../../static/images/car.jpg'); */\n  background-position: center;\n  background-size: cover;\n`;\n\nconst ItemImageImage = styled.img`\n  height: 200px;\n`;\n\nexport class AdminPage extends Component {\n  render() {\n    const itemsList = this.props.initData.map(item => {\n      console.log(\"item.image: \", item.image);\n      return (\n        <div key={item.id}>\n          <h3>{item.title}</h3>\n          <ItemImage image={item.image} />\n        </div>\n      );\n    });\n    return (\n      <>\n        <h2>This is Admin component</h2>\n        {itemsList}\n      </>\n    );\n  }\n}\n\n//Get state from the redux\nconst mapStateToProps = state => {\n  return {\n    initData: state.items\n  };\n};\n\n//Dispatch the action for initial data\n// const mapDispatchToProps = dispatch => {\n//     return {\n//         getGallery: (galleryType, gallerySort, galleryWindow, viral) => dispatch(actions.getGalleryData(galleryType, gallerySort, galleryWindow, viral))\n//     }\n// }\n\nexport default connect(\n  mapStateToProps,\n  null\n)(AdminPage);\n","import React, {Component} from \"react\";\nimport styled from \"styled-components\";\n\nexport class HomePage extends Component{\n render() {\n   return(\n    <h1>This is Home component</h1>\n  )\n }\n}\n\nexport default HomePage\n\n\n","import React, { Component } from \"react\";\nimport styled from \"styled-components\";\n\nexport class ItemPage extends Component {\n  render() {\n    return <h1>This is Item component</h1>;\n  }\n}\n\nexport default ItemPage;\n","import React from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport \"./App.css\";\nimport Layout from \"./components/Layouts/Layout\";\nimport AdminPage from \"./components/Pages/AdminPage\";\nimport HomePage from \"./components/Pages/HomePage\";\nimport ItemPage from \"./components/Pages/ItemPage\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Layout>\n        <Switch>\n          <Route path=\"/admin\" component={AdminPage} />\n          <Route path=\"/item/:id\" component={ItemPage} />\n          <Route path=\"/\" component={HomePage} />\n        </Switch>\n      </Layout>\n    </div>\n  );\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import * as actionTypes from \"../actions/actionTypes\";\n\nexport const initialState = {\n  items: [\n    {\n      id: 1,\n      title: \"This is First Item\",\n      vendor: \"lego\",\n      price: \"15$\",\n      image: \"car.jpg\",\n      availability: \"10\",\n      ageClassification: \"3+\",\n      material: \"plastic\",\n      type: \"cars\",\n      shortDescriprion:\n        \"Lorem Ipsum is simply dummy text of the printing and typesetting industry\",\n      description:\n        \"Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industrys standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged.\"\n    },\n    {\n      id: 2,\n      title: \"This is Second Item\",\n      vendor: \"lego\",\n      price: \"25$\",\n      image: \"dool_hero.jpg\",\n      availability: \"10\",\n      ageClassification: \"3+\",\n      material: \"plastic\",\n      type: \"cars\",\n      shortDescriprion:\n        \"Lorem Ipsum is simply dummy text of the printing and typesetting industry\",\n      description:\n        \"Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industrys standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged.\"\n    },\n    {\n      id: 3,\n      title: \"This is Third Item\",\n      vendor: \"lego\",\n      price: \"35$\",\n      image: \"figures.jpg\",\n      availability: \"10\",\n      ageClassification: \"3+\",\n      material: \"plastic\",\n      type: \"cars\",\n      shortDescriprion:\n        \"Lorem Ipsum is simply dummy text of the printing and typesetting industry\",\n      description:\n        \"Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industrys standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged.\"\n    },\n    {\n      id: 4,\n      title: \"This is Fourth Item\",\n      vendor: \"lego\",\n      price: \"35$\",\n      image: \"game_nitendo.jpg\",\n      availability: \"10\",\n      ageClassification: \"3+\",\n      material: \"plastic\",\n      type: \"cars\",\n      shortDescriprion:\n        \"Lorem Ipsum is simply dummy text of the printing and typesetting industry\",\n      description:\n        \"Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industrys standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged.\"\n    },\n    {\n      id: 5,\n      title: \"This is Fifth Item\",\n      vendor: \"lego\",\n      price: \"35$\",\n      image: \"mini_mickey.jpg\",\n      availability: \"10\",\n      ageClassification: \"3+\",\n      material: \"plastic\",\n      type: \"cars\",\n      shortDescriprion:\n        \"Lorem Ipsum is simply dummy text of the printing and typesetting industry\",\n      description:\n        \"Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industrys standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged.\"\n    },\n    {\n      id: 6,\n      title: \"This is Sixth Item\",\n      vendor: \"lego\",\n      price: \"35$\",\n      image: \"pikachu.jpg\",\n      availability: \"10\",\n      ageClassification: \"3+\",\n      material: \"plastic\",\n      type: \"cars\",\n      shortDescriprion:\n        \"Lorem Ipsum is simply dummy text of the printing and typesetting industry\",\n      description:\n        \"Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industrys standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged.\"\n    }\n  ],\n  error: false\n};\n\nexport const reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.SET_INITIAL_DATA:\n      return {\n        ...state,\n        items: action.initialData,\n        error: false\n      };\n    case actionTypes.SET_ERROR:\n      return {\n        ...state,\n        error: true\n      };\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n","export const GET_INITIAL_DATA = \"GET_INITIAL_DATA\";\nexport const SET_INITIAL_DATA = \"SET_INITIAL_DATA\";\nexport const SET_ERROR = \"SET_ERROR\";\n","import { put } from \"redux-saga/effects\";\nimport axios from \"axios\";\nimport * as actions from \"../actions\";\n// import { API_URL, CLIENT_ID } from \"../../components/consts\";\n\nexport function* initDataSaga(action) {\n  // console.log(\"ACTION: \", action);\n  // const window = action.galleryWindow ? `/${action.galleryWindow}` : \"\";\n  // const showViral = action.viral !== null ? `?showViral=${action.viral}` : \"\";\n  // try {\n  //   const response = yield axios({\n  //     method: \"get\",\n  //     url: `${API_URL}${action.galleryType}/${action.gallerySort}${window}.json${showViral}`,\n  //     headers: { Authorization: \"Client-ID \" + CLIENT_ID }\n  //   });\n  //   yield put(actions.setGalleryData(response.data.data));\n  // } catch (error) {\n  //   yield put(actions.setErorr());\n  // }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { Provider } from \"react-redux\";\nimport { createStore, applyMiddleware } from \"redux\";\nimport reducer from \"../src/store/reducers/reducer\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport createSagaMiddleware from \"redux-saga\";\nimport { initDataSaga } from \"./store/sagas/initialData\";\n\nconst sagaMiddleware = createSagaMiddleware();\nconst store = createStore(reducer, applyMiddleware(sagaMiddleware));\nsagaMiddleware.run(initDataSaga);\n\nconst app = (\n  <BrowserRouter>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </BrowserRouter>\n);\n\nReactDOM.render(app, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}